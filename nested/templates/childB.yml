AWSTemplateFormatVersion: 2010-09-09
Description: Sample Stack
Parameters:
  DynamoTableName:
    Type: String
Resources:
  GrandchildStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: >-
        https://s3-us-west-2.amazonaws.com/us-west-2.cfn-demos.templeton.host/nesteds/grandchild.json
      Parameters:
        DynamoTableName: !Ref DynamoTableName
  SampleLambda:
    DependsOn:
      - GrandchildStack
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        ZipFile: !Sub |
          console.log('Loading function');
          const AWS = require('aws-sdk');
          var dynamo = new AWS.DynamoDB.DocumentClient();
          const TABLE = '${SampleDynamoTable}';

          exports.handler = function(event, context) {
            console.log('Received event: %j', event);
            dynamo.put(
              {
                Item: event,
                TableName: TABLE
              },
              function(err, data) {
                if (err) {
                  console.error('Request failure! %j', err);
                  return context.done(err, null);
                }
                console.log('Request success! %j', data);
                context.done(err, item);
              }
            );
          };
      Description: Lambda to integrate test asset with.
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt
        - GrandchildStack
        - Outputs.RoleArn
      Runtime: nodejs
      Timeout: 300
Outputs:
  LambdaName:
    Description: Name of the Lambda we made.
    Value: !Ref SampleLambda
